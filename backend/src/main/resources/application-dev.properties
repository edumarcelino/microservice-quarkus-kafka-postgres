quarkus.datasource.db-kind=h2
quarkus.datasource.jdbc.url=jdbc:h2:mem:testdb;DB_CLOSE_DELAY=-1
quarkus.datasource.username=sa
quarkus.datasource.password=
quarkus.hibernate-orm.database.generation=drop-and-create
quarkus.hibernate-orm.log.sql=true


# Ativa a geração da documentação OpenAPI
quarkus.smallrye-openapi.path=/openapi
quarkus.smallrye-openapi.enable-ui=true

# Ativa a interface gráfica do Swagger UI
quarkus.swagger-ui.always-include=true
quarkus.swagger-ui.path=/swagger-ui


# Configuração do KAFKA
# The Kafka broker location (defaults to localhost:9092)
kafka.bootstrap.servers=kafka:9092

# Configuring the incoming channel (reading from Kafka)
mp.messaging.incoming.users-in.connector=smallrye-kafka
mp.messaging.incoming.users-in.topic=users
mp.messaging.incoming.users-in.key.deserializer=org.apache.kafka.common.serialization.StringDeserializer
mp.messaging.incoming.users-in.value.deserializer=org.apache.kafka.common.serialization.StringDeserializer

# Configuring the outgoing channel (writing to Kafka)
mp.messaging.outgoing.users-out.connector=smallrye-kafka
mp.messaging.outgoing.users-out.topic=users
mp.messaging.outgoing.users-out.key.serializer=org.apache.kafka.common.serialization.StringSerializer
mp.messaging.outgoing.users-out.value.serializer=org.apache.kafka.common.serialization.StringSerializer


quarkus.log.level=DEBUG
quarkus.log.category."io.quarkus.oidc".level=DEBUG


#  KEYCLOAK - CONFIGURAÇÃO - INICIO

# URL do Keycloak apontando para o realm correto
quarkus.oidc.auth-server-url=http://keycloak:8080/realms/gpg

# ID do cliente criado no Keycloak
quarkus.oidc.client-id=gpg_client
quarkus.oidc.credentials.secret=secret

# Tipo de aplicação
quarkus.oidc.application-type=service

# Extraindo os roles do token JWT
#quarkus.oidc.roles.role-claim-path=realm_access.roles
quarkus.oidc.token.claims.role=realm_access.roles

# Desabilitando a verificação do issuer (ISS)
quarkus.oidc.token.issuer-verification-enabled=false


#  KEYCLOAK - CONFIGURAÇÃO - FIM
